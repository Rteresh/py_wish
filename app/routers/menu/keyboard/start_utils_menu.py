from aiogram import Router, types, F
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup
from aiogram.utils.i18n import gettext as _
from aiogram.utils.i18n import lazy_gettext as __


from app.routers.menu.keyboard.main_keyboard_utils_menu import update_main_keyboard
from app.routers.wish.active_wish_router import create_active_wish, send_confirmation_request, get_active_time, \
    change_active_wish

start_keyboard = Router()


@start_keyboard.message(F.text == __("üé≤ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É"))
async def start_game_handler(message: types.Message):
    await create_active_wish(message)
    await update_main_keyboard(message)


@start_keyboard.message(F.text == __("üéØ –ê–∫—Ç–∏–≤–Ω–æ–µ –∂–µ–ª–∞–Ω–∏–µ"))
async def active_wish_handler(message: types.Message):
    await message.answer(_("–ê–∫—Ç–∏–≤–Ω–æ–µ –∂–µ–ª–∞–Ω–∏–µ"), reply_markup=_get_active_keyboard())


def _get_active_keyboard():
    buttons = [
        [KeyboardButton(text=_("–°–æ–æ–±—â–∏—Ç—å –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∂–µ–ª–∞–Ω–∏—è"))],
        [KeyboardButton(text=_("–ú–æ–µ –∞–∫—Ç–∏–≤–Ω–æ–µ –∂–µ–ª–∞–Ω–∏–µ")),
         KeyboardButton(text=_("–°–º–µ–Ω–∏—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–µ –∂–µ–ª–∞–Ω–∏–µ"))],
        [KeyboardButton(text=_("–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"))]
    ]
    keyboard = ReplyKeyboardMarkup(
        keyboard=buttons,
        one_time_keyboard=True,  # –≠—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–∞ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
        resize_keyboard=True,
        input_field_placeholder=_("–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é")  # –≠—Ç–æ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –≤–≤–µ—Ä—Ö—É —ç–∫—Ä–∞–Ω–∞
    )
    return keyboard


@start_keyboard.message(F.text == __("–°–æ–æ–±—â–∏—Ç—å –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∂–µ–ª–∞–Ω–∏—è"))
async def add_wish_handler(message: types.Message):
    await send_confirmation_request(message)


@start_keyboard.message(F.text == __("–ú–æ–µ –∞–∫—Ç–∏–≤–Ω–æ–µ –∂–µ–ª–∞–Ω–∏–µ"))
async def add_wish_handler(message: types.Message):
    await get_active_time(message)


@start_keyboard.message(F.text == __("–°–æ–æ–±—â–∏—Ç—å –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∂–µ–ª–∞–Ω–∏—è"))
async def add_wish_handler(message: types.Message):
    await change_active_wish(message)